{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Modern Cloud \u00b6 Modern Cloud makes it easier to build your backend. Even though our UI is super intuitive, our goal is to have extensive documentation to ensure we get you up to speed as quickly as possible. Ready to dive in? \u00b6 Let's build our fully functional, ready for production CRUD app within just minutes. Let's go! Quick Start New to Modern Cloud? \u00b6 Read our introduction to understand our mission and where we are heading. Introduction","title":"Home"},{"location":"#welcome-to-modern-cloud","text":"Modern Cloud makes it easier to build your backend. Even though our UI is super intuitive, our goal is to have extensive documentation to ensure we get you up to speed as quickly as possible.","title":"Welcome to Modern Cloud"},{"location":"#ready-to-dive-in","text":"Let's build our fully functional, ready for production CRUD app within just minutes. Let's go! Quick Start","title":"Ready to dive in?"},{"location":"#new-to-modern-cloud","text":"Read our introduction to understand our mission and where we are heading. Introduction","title":"New to Modern Cloud?"},{"location":"getting-started/get-your-aws-credentials/","text":"","title":"Get your AWS Credentials"},{"location":"getting-started/introduction/","text":"Modern Cloud is a browser-first serverless platform that allows you to build your backend easily. Our mission is to make cloud development simple. We are starting our journey with AWS Lambdas. AWS lambda is servlerless solution that allows you to run your code without managing your infrastructure. No need to provision services, no need to deal with scalability, no need for DevOps. You deploy your code, and it just works. Even though everything might sound great, we believe that there's still significant overhead involved around building, testing and managing lambdas. Modern Cloud addresses these problems. First, we designed a solution that's browser-first. Lambdas were ripe for this critical design decision. Lambda functions tend to be small, you don't need a sophisticated IDE to write code for them. Secondly, it's very easy for an organization to end up with tens of, or even hundreds of lambda functions. Managing lambdas through a codebase becomes impossible. Modern Cloud lets you to build, test, deploy and organize your lambdas via a well-designed interface. We made sure that it's fast. It feels like you're working on a native app. Another important feature of Modern Cloud is we don't have our own custom layer. Meaning that whatever you do on our platform are translated to Terraform configurations. Terraform is a widely-used open-source tool that lets you to define your cloud infrastructure declaratively. All in all, you have no hard dependency on us. Another advantage of using Terraform as the backing tool is you can extend on the existing definitions that we create; to add more features that we do not support yet. So, using Modern Cloud doesn't come at the cost of your control. You have all the control. Our product is easy to use and requires minimal reading to understand how it works. Just sign up and give it a try. If you need further assistance, help yourself and read the topics listed on the left menu, or reach out to us at contact@moderncloud.io","title":"Introduction"},{"location":"getting-started/quick-start/","text":"We'll build a simple, production-ready CRUD application in just a few minutes, right inside your browser. First, sign up to Modern Cloud. Once you are logged into the app, you'll see your endpoints, functions, and all other resources, including your DynamoDB tables, on the left-hand side pane. We'll start by creating our table. Expand the DynamoDB menu item on the left and click New Table . You should see the following pop-up: For the Name enter users , and for the Hash Key , enter UserID . Leave the remaining as is and click Create. We now have our DynamoDB table ready which we can use to insert and retrieve data from our lambda endpoints. Now, it's time to create our write endpoint. Expand the Endpoints menu item on the left and click new endpoint . You should see the following pop-up: Enter the details for our new write endpoint, a user-friendly name such as Create User and select POST as the method. Finally, for the path, enter users . Then, click Create. We are now ready to write our code. Click on the newly created endpoint on the left menu, and the editor should open as a new tab. Copy and paste the following code: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 const AWS = require ( \"aws-sdk\" ); const dbClient = new AWS . DynamoDB . DocumentClient ({ apiVersion : '2012-08-10' }); exports . handler = async ( event ) => { let params = JSON . parse ( event . body ); await dbClient . put ({ TableName : 'users' , Item : { email : params . email , name : params . name } }). promise (); return { statusCode : 200 , body : JSON . stringify ({}) } }; Because we are using a node-js package, we need to make sure the package is specificed. On the right pane, select Packages . Click Add Package button and search for aws-sdk . The latest stable version will be automatically entered but you can modify that if you want to use a different version. Now, on the right pane, select Deployment from the drop-down menu at the top right corner. Then, click the deploy button under dev section. After a few seconds, your endpoint should be ready for testing! You can click on the generated link to access your endpoint and start testing! Let's quickly explore a few more things. On the top-right corner, from the drop-down menu, select Logs . You can easily see your logs here. By selecting Overview , and you can see all the basic metrics associated with your endpoint. We are always eager to hear your feedback! Reach out to us via contact@moderncloud.io and say hello!","title":"Quick Start"}]}